## @file
# Top-Level Makefile
#

SUB_DEPTH = .
include $(KBUILD_PATH)/subheader.kmk

#
# Include sub-makefiles
#
include $(PATH_SUB_CURRENT)/poppler/Makefile.kmk
include $(PATH_SUB_CURRENT)/libdjvu/Makefile.kmk
include $(PATH_SUB_CURRENT)/libjpeg/Makefile.kmk
include $(PATH_SUB_CURRENT)/Lucide/Makefile.kmk

#
# WarpIn & Zip distribution
#

PATH_OUT	?= . # be on the safe side (we do rmdir -fR of PATH_PACKING)
PATH_PACKING = $(PATH_OUT)/packing

FILE_VERSION = $(subst $(SP),_,$(subst .,_,$(VERSION)$(if $(BUILD),_$(BUILD))))

LUCIDE_WPI	 = $(PATH_OUT)/Lucide-$(FILE_VERSION).wpi
LUCIDE_ZIP	 = $(PATH_OUT)/Lucide-$(FILE_VERSION).zip

LUCIDE_WIS	 = $(PATH_PACKING)/wpi/lucide.wis

OTHER_CLEAN	+= $(LUCIDE_WPI) $(LUCIDE_ZIP) $(LUCIDE_WIS)

ifeq ($(IN_PACKING),)

#
# Special packing target sets a magic variable and restarts
# (to avoid extra INSTALLS targets during regular non-packing kmk invocations)
#
PACKING		 = do_packing

do_packing:
	$(RM) -fR $(PATH_PACKING)
	$(QUIET)$(MAKE) IN_PACKING=1 uninstall rebuild packing

fastpacking:
	$(RM) -fR $(PATH_PACKING)
	$(QUIET)$(MAKE) IN_PACKING=1 uninstall packing

fastestpacking:
	$(QUIET)$(MAKE) IN_PACKING=1 packing

else

#
# Real packing rules
#
INSTALLS	 = Lucide_wpi_1 Lucide_wpi_2 Lucide_wpi_3 Lucide_wpi_4 Lucide_wpi_5 \
		   Lucide_wpi_6 Lucide_wpi_7 Lucide_wpi_8 Lucide_wpi_9 Lucide_wpi_10 \
		   Lucide_zip
PACKING		 = $(LUCIDE_WPI) $(LUCIDE_ZIP)

#
# WPI
#

Lucide_wpi_1_INST		 = $(notdir $(PATH_PACKING))/wpi/1
Lucide_wpi_1_SOURCES	 = \
	$(TARGET_Lucide) \
	$(TARGET_Lucide_dll) \
	$(TARGET_ludoc) \
	$(abspathex $(Lucide_doc_SOURCES),$(Lucide_doc_PATH)) \
	$(abspathex $(Lucide_lng_SOURCES),$(Lucide_lng_PATH))

Lucide_wpi_2_INST		 = $(notdir $(PATH_PACKING))/wpi/2
Lucide_wpi_2_SOURCES	 = $(TARGET_lupoppler)

Lucide_wpi_3_INST		 = $(notdir $(PATH_PACKING))/wpi/3
Lucide_wpi_3_SOURCES	 = $(TARGET_ludjvu)

Lucide_wpi_4_INST		 = $(notdir $(PATH_PACKING))/wpi/4
Lucide_wpi_4_SOURCES	 = $(TARGET_lujpeg)

Lucide_wpi_5_INST		 = $(notdir $(PATH_PACKING))/wpi/5
Lucide_wpi_5_SOURCES	 = warpin/LngDummy.txt

Lucide_wpi_6_INST		 = $(notdir $(PATH_PACKING))/wpi/6
Lucide_wpi_6_SOURCES	 = warpin/LngDummy.txt

Lucide_wpi_7_INST		 = $(notdir $(PATH_PACKING))/wpi/7
Lucide_wpi_7_SOURCES	 = warpin/LngDummy.txt

Lucide_wpi_8_INST		 = $(notdir $(PATH_PACKING))/wpi/8
Lucide_wpi_8_SOURCES	 = warpin/LngDummy.txt

Lucide_wpi_9_INST		 = $(notdir $(PATH_PACKING))/wpi/9
Lucide_wpi_9_SOURCES	 = warpin/LngDummy.txt

Lucide_wpi_10_INST		 = $(notdir $(PATH_PACKING))/wpi/10
Lucide_wpi_10_SOURCES	 = warpin/LngDummy.txt


$(LUCIDE_WPI): $(LUCIDE_WIS) install
	$(call MSG_L1,Packing $@)
	-$(QUIET)$(RM) -f $@
	$(QUIET)echo > $(abspathex $(Lucide_wpi_1_INST),$(PATH_OUT))/lucide.fcf
	$(QUIET)wic -a $@ \
		$(foreach p,$(patsubst Lucide_wpi_%,%,$(filter Lucide_wpi_%,$(INSTALLS))),\
			$(p) -c$(abspathex $(Lucide_wpi_$(p)_INST),$(PATH_OUT)) \*) \
		-s $(LUCIDE_WIS)

$(LUCIDE_WIS): warpin/lucide.wis.tpl Config.kmk | $$(call DIRDEP,$$(@D))
	$(call MSG_L1,Generating $@)
	$(QUIET)$(SED) \
		-e "s;\\\$${VERSION};$(VERSION);g" \
		-e "s;\\\$${BUILD};$(BUILD);g" \
		-e "s;\\\$${WPIVERSION};$(subst .,\\\,$(VERSION));g" \
		-e "s;\\\$${WPIBUILD};$(WPIBUILD);g" \
		--output $@ $<

BLDDIRS	+= $(dir $(LUCIDE_WIS))

#
# ZIP (puts all WPI packages together)
#

Lucide_zip_INST		 = $(notdir $(PATH_PACKING))/zip
Lucide_zip_SOURCES	 = \
	$(foreach p,$(patsubst Lucide_wpi_%,%,$(filter Lucide_wpi_%,$(INSTALLS))),\
		$(Lucide_wpi_$(p)_SOURCES))

$(LUCIDE_ZIP): install
	$(call MSG_L1,Packing $@)
	-$(QUIET)$(RM) -f $@
	$(QUIET)$(REDIRECT) -C $(PATH_PACKING)/zip -- zip -Sr9 $@ \*

endif # IN_PACKING

include $(FILE_KBUILD_SUB_FOOTER)

