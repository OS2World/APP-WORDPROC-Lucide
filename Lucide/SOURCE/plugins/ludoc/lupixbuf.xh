
/*
 * This file was generated by the SOM Compiler.
 * FileName: lupixbuf.xh.
 * Generated using:
 *     SOM Precompiler somipc: 2.29.1.17
 *     SOM Emitter emitxh: 2.47
 */

#ifndef SOM_LuPixbuf_xh
#define SOM_LuPixbuf_xh

class LuPixbuf;

#define LuPixbuf_MajorVersion 0
#define LuPixbuf_MinorVersion 0

/* C++ SOM defs */
#include <somcls.xh>
#include <somcm.xh>

/* C++ parent defs */
#ifndef SOM_SOMObject_xh
#include <somobj.xh>
#endif

#ifndef LuPixbuf_API
#define LuPixbuf_API
/*
 * -- The Class API
 */

/*
 * Start of bindings for IDL types
 */

class SOMClass;
class SOMObject;

/*
 * End of bindings for IDL types.
 */

/* A procedure to create the LuPixbuf Class */
SOMEXTERN SOMClass * SOMLINK LuPixbufNewClass(
		integer4 majorVersion,
		integer4 minorVersion);

/* The API to the LuPixbuf class object, and the methods it introduces. */
SOMEXTERNS struct LuPixbufClassDataStructure {
	SOMClass *classObject;
	somMToken LuPixbufInit;
	somMToken getWidth;
	somMToken getHeight;
	somMToken getBpp;
	somMToken getRowSize;
	somMToken getDataLen;
	somMToken getDataPtr;
	somMToken putAt;
} SOMDLINK LuPixbufClassData;
#define _LuPixbuf LuPixbufClassData.classObject

/* The API to parentMtabs for LuPixbuf, and the instance data it introduces. */
SOMEXTERNS struct LuPixbufCClassDataStructure {
	somMethodTabs parentMtab;
	somDToken              instanceDataToken;
} SOMDLINK LuPixbufCClassData;

/*
 * -- Typedefs for LuPixbuf Method Procedures
 */
SOMEXTERN {
typedef void   SOMLINK somTP_LuPixbuf_LuPixbufInit(LuPixbuf *somSelf, Environment *ev, 
		somInitCtrl* ctrl, 
		long w, 
		long h, 
		short bpp);
typedef somTP_LuPixbuf_LuPixbufInit *somTD_LuPixbuf_LuPixbufInit;
typedef long   SOMLINK somTP_LuPixbuf_getWidth(LuPixbuf *somSelf, Environment *ev);
typedef somTP_LuPixbuf_getWidth *somTD_LuPixbuf_getWidth;
typedef long   SOMLINK somTP_LuPixbuf_getHeight(LuPixbuf *somSelf, Environment *ev);
typedef somTP_LuPixbuf_getHeight *somTD_LuPixbuf_getHeight;
typedef short   SOMLINK somTP_LuPixbuf_getBpp(LuPixbuf *somSelf, Environment *ev);
typedef somTP_LuPixbuf_getBpp *somTD_LuPixbuf_getBpp;
typedef long   SOMLINK somTP_LuPixbuf_getRowSize(LuPixbuf *somSelf, Environment *ev);
typedef somTP_LuPixbuf_getRowSize *somTD_LuPixbuf_getRowSize;
typedef long   SOMLINK somTP_LuPixbuf_getDataLen(LuPixbuf *somSelf, Environment *ev);
typedef somTP_LuPixbuf_getDataLen *somTD_LuPixbuf_getDataLen;
typedef void*   SOMLINK somTP_LuPixbuf_getDataPtr(LuPixbuf *somSelf, Environment *ev);
typedef somTP_LuPixbuf_getDataPtr *somTD_LuPixbuf_getDataPtr;
typedef void   SOMLINK somTP_LuPixbuf_putAt(LuPixbuf *somSelf, Environment *ev, 
		LuPixbuf* p, 
		long x, 
		long y);
typedef somTP_LuPixbuf_putAt *somTD_LuPixbuf_putAt;

/*
 * -- Typedefs for Reintroduced Wrapper Methods
 */
typedef void   SOMLINK somTP_LuPixbuf_somDefaultInit(LuPixbuf *somSelf, 
		som3InitCtrl* ctrl);
typedef somTP_LuPixbuf_somDefaultInit *somTD_LuPixbuf_somDefaultInit;
typedef void   SOMLINK somTP_LuPixbuf_somDestruct(LuPixbuf *somSelf, 
		octet doFree, 
		som3DestructCtrl* ctrl);
typedef somTP_LuPixbuf_somDestruct *somTD_LuPixbuf_somDestruct;
typedef void   SOMLINK somTP_LuPixbuf_somDefaultCopyInit(LuPixbuf *somSelf, 
		som3InitCtrl* ctrl, 
		SOMObject* fromObj);
typedef somTP_LuPixbuf_somDefaultCopyInit *somTD_LuPixbuf_somDefaultCopyInit;
typedef LuPixbuf*   SOMLINK somTP_LuPixbuf_somDefaultAssign(LuPixbuf *somSelf, 
		som3AssignCtrl* ctrl, 
		SOMObject* fromObj);
typedef somTP_LuPixbuf_somDefaultAssign *somTD_LuPixbuf_somDefaultAssign;
typedef void   SOMLINK somTP_LuPixbuf_somDefaultConstCopyInit(LuPixbuf *somSelf, 
		som3InitCtrl* ctrl, 
		SOMObject* fromObj);
typedef somTP_LuPixbuf_somDefaultConstCopyInit *somTD_LuPixbuf_somDefaultConstCopyInit;
typedef void   SOMLINK somTP_LuPixbuf_somDefaultVCopyInit(LuPixbuf *somSelf, 
		som3InitCtrl* ctrl, 
		SOMObject* fromObj);
typedef somTP_LuPixbuf_somDefaultVCopyInit *somTD_LuPixbuf_somDefaultVCopyInit;
typedef void   SOMLINK somTP_LuPixbuf_somDefaultConstVCopyInit(LuPixbuf *somSelf, 
		som3InitCtrl* ctrl, 
		SOMObject* fromObj);
typedef somTP_LuPixbuf_somDefaultConstVCopyInit *somTD_LuPixbuf_somDefaultConstVCopyInit;
typedef LuPixbuf*   SOMLINK somTP_LuPixbuf_somDefaultConstAssign(LuPixbuf *somSelf, 
		som3AssignCtrl* ctrl, 
		SOMObject* fromObj);
typedef somTP_LuPixbuf_somDefaultConstAssign *somTD_LuPixbuf_somDefaultConstAssign;
typedef LuPixbuf*   SOMLINK somTP_LuPixbuf_somDefaultVAssign(LuPixbuf *somSelf, 
		som3AssignCtrl* ctrl, 
		SOMObject* fromObj);
typedef somTP_LuPixbuf_somDefaultVAssign *somTD_LuPixbuf_somDefaultVAssign;
typedef LuPixbuf*   SOMLINK somTP_LuPixbuf_somDefaultConstVAssign(LuPixbuf *somSelf, 
		som3AssignCtrl* ctrl, 
		SOMObject* fromObj);
typedef somTP_LuPixbuf_somDefaultConstVAssign *somTD_LuPixbuf_somDefaultConstVAssign;
typedef void   SOMLINK somTP_LuPixbuf_somInit(LuPixbuf *somSelf);
typedef somTP_LuPixbuf_somInit *somTD_LuPixbuf_somInit;
typedef void   SOMLINK somTP_LuPixbuf_somFree(LuPixbuf *somSelf);
typedef somTP_LuPixbuf_somFree *somTD_LuPixbuf_somFree;
typedef void   SOMLINK somTP_LuPixbuf_somUninit(LuPixbuf *somSelf);
typedef somTP_LuPixbuf_somUninit *somTD_LuPixbuf_somUninit;
typedef SOMClass*   SOMLINK somTP_LuPixbuf_somGetClass(LuPixbuf *somSelf);
typedef somTP_LuPixbuf_somGetClass *somTD_LuPixbuf_somGetClass;
typedef string   SOMLINK somTP_LuPixbuf_somGetClassName(LuPixbuf *somSelf);
typedef somTP_LuPixbuf_somGetClassName *somTD_LuPixbuf_somGetClassName;
typedef long   SOMLINK somTP_LuPixbuf_somGetSize(LuPixbuf *somSelf);
typedef somTP_LuPixbuf_somGetSize *somTD_LuPixbuf_somGetSize;
typedef boolean   SOMLINK somTP_LuPixbuf_somIsA(LuPixbuf *somSelf, 
		SOMClass* aClassObj);
typedef somTP_LuPixbuf_somIsA *somTD_LuPixbuf_somIsA;
typedef boolean   SOMLINK somTP_LuPixbuf_somIsInstanceOf(LuPixbuf *somSelf, 
		SOMClass* aClassObj);
typedef somTP_LuPixbuf_somIsInstanceOf *somTD_LuPixbuf_somIsInstanceOf;
typedef boolean   SOMLINK somTP_LuPixbuf_somRespondsTo(LuPixbuf *somSelf, 
		somId mId);
typedef somTP_LuPixbuf_somRespondsTo *somTD_LuPixbuf_somRespondsTo;
typedef boolean   SOMLINK somTP_LuPixbuf_somDispatch(LuPixbuf *somSelf, 
		somToken* retValue, 
		somId methodId, 
		va_list ap);
typedef somTP_LuPixbuf_somDispatch *somTD_LuPixbuf_somDispatch;
typedef boolean   SOMLINK somTP_LuPixbuf_somClassDispatch(LuPixbuf *somSelf, 
		SOMClass* clsObj, 
		somToken* retValue, 
		somId methodId, 
		va_list ap);
typedef somTP_LuPixbuf_somClassDispatch *somTD_LuPixbuf_somClassDispatch;
typedef boolean   SOMLINK somTP_LuPixbuf_somCastObj(LuPixbuf *somSelf, 
		SOMClass* cls);
typedef somTP_LuPixbuf_somCastObj *somTD_LuPixbuf_somCastObj;
typedef boolean   SOMLINK somTP_LuPixbuf_somResetObj(LuPixbuf *somSelf);
typedef somTP_LuPixbuf_somResetObj *somTD_LuPixbuf_somResetObj;
typedef void   SOMLINK somTP_LuPixbuf_somDispatchV(LuPixbuf *somSelf, 
		somId methodId, 
		somId descriptor, 
		va_list ap);
typedef somTP_LuPixbuf_somDispatchV *somTD_LuPixbuf_somDispatchV;
typedef long   SOMLINK somTP_LuPixbuf_somDispatchL(LuPixbuf *somSelf, 
		somId methodId, 
		somId descriptor, 
		va_list ap);
typedef somTP_LuPixbuf_somDispatchL *somTD_LuPixbuf_somDispatchL;
typedef void*   SOMLINK somTP_LuPixbuf_somDispatchA(LuPixbuf *somSelf, 
		somId methodId, 
		somId descriptor, 
		va_list ap);
typedef somTP_LuPixbuf_somDispatchA *somTD_LuPixbuf_somDispatchA;
typedef double   SOMLINK somTP_LuPixbuf_somDispatchD(LuPixbuf *somSelf, 
		somId methodId, 
		somId descriptor, 
		va_list ap);
typedef somTP_LuPixbuf_somDispatchD *somTD_LuPixbuf_somDispatchD;
typedef SOMObject*   SOMLINK somTP_LuPixbuf_somPrintSelf(LuPixbuf *somSelf);
typedef somTP_LuPixbuf_somPrintSelf *somTD_LuPixbuf_somPrintSelf;
typedef void   SOMLINK somTP_LuPixbuf_somDumpSelf(LuPixbuf *somSelf, 
		long level);
typedef somTP_LuPixbuf_somDumpSelf *somTD_LuPixbuf_somDumpSelf;
typedef void   SOMLINK somTP_LuPixbuf_somDumpSelfInt(LuPixbuf *somSelf, 
		long level);
typedef somTP_LuPixbuf_somDumpSelfInt *somTD_LuPixbuf_somDumpSelfInt;
}

#endif /* LuPixbuf_API */


/*
 * -- This emitter treats Method Tokens as Thunks by default.
 * -- Use the sc modifier "nothunks" to change this default
 */
#undef somresolve_
#define somresolve_(obj,mToken) ((somMethodProc*)((void)obj, mToken))

/*
 * -- The C++ Wrapper Class for LuPixbuf
 */
class LuPixbuf : public SOMObject
{
public:

// LuPixbuf::new creates the class object if necessary, and then uses somNewNoInit
// to allocate memory and create the object. Initialization is in ctors.
void *operator new(size_t)
{
   if (!_LuPixbuf) LuPixbufNewClass(LuPixbuf_MajorVersion,LuPixbuf_MinorVersion);
   return (void*)
      SOM_Resolve(_LuPixbuf,SOMClass,somNewNoInit)
         ((SOMClass *)((void*)_LuPixbuf));
}

// LuPixbuf::delete uses somDestruct.
void operator delete(void * obj)
{
   if (obj && *(void**)obj) {
      SOM_Resolve(obj,SOMObject,somFree)
         ((SOMObject*)obj);
   }
}

LuPixbuf& operator=(LuPixbuf& fromObj)
{
   this->somDefaultAssign(0,(SOMObject*)((void*)&fromObj));
   return *this;
}

LuPixbuf()
{
   if (*(void**)this != 
       ((somParentMtabStructPtr)
        (LuPixbufCClassData.parentMtab))->mtab)
      return;
   ((SOMObject*)((void*)this))->somDefaultInit(0);
}

LuPixbuf(LuPixbuf* fromObj)
{
   if (*(void**)this != 
       ((somParentMtabStructPtr)
        (LuPixbufCClassData.parentMtab))->mtab)
      return;
   ((SOMObject*)((void*)this))->somDefaultCopyInit(0,((SOMObject*)((void*)fromObj)));
}

#ifdef __IBMCPP__
#pragma info(nocnv,nopar)
#endif
LuPixbuf(const LuPixbuf* fromObj)
{
   if (*(void**)this != 
       ((somParentMtabStructPtr)
        (LuPixbufCClassData.parentMtab))->mtab)
      return;
   ((SOMObject*)((void*)this))->somDefaultConstCopyInit(0,((SOMObject*)((void*)fromObj)));
}
#ifdef __IBMCPP__
#pragma info(restore)
#endif

LuPixbuf(Environment *ev,long w,long h,short bpp) 
{
   LuPixbufInit(ev,0,w,h,bpp);
}


/* initializer method: LuPixbufInit */
void   LuPixbufInit(Environment *ev, 
		somInitCtrl* ctrl, 
		long w, 
		long h, 
		short bpp)
{
   SOM_ResolveD(this,LuPixbuf,LuPixbuf,LuPixbufInit)
	(this, ev,ctrl,w,h,bpp);
}


/* method: getWidth */
long   getWidth(Environment *ev)
{
   return SOM_ResolveD(this,LuPixbuf,LuPixbuf,getWidth)
	(this, ev);
}


/* method: getHeight */
long   getHeight(Environment *ev)
{
   return SOM_ResolveD(this,LuPixbuf,LuPixbuf,getHeight)
	(this, ev);
}


/* method: getBpp */
short   getBpp(Environment *ev)
{
   return SOM_ResolveD(this,LuPixbuf,LuPixbuf,getBpp)
	(this, ev);
}


/* method: getRowSize */
long   getRowSize(Environment *ev)
{
   return SOM_ResolveD(this,LuPixbuf,LuPixbuf,getRowSize)
	(this, ev);
}


/* method: getDataLen */
long   getDataLen(Environment *ev)
{
   return SOM_ResolveD(this,LuPixbuf,LuPixbuf,getDataLen)
	(this, ev);
}


/* method: getDataPtr */
void*   getDataPtr(Environment *ev)
{
   return SOM_ResolveD(this,LuPixbuf,LuPixbuf,getDataPtr)
	(this, ev);
}


/* method: putAt */
void   putAt(Environment *ev, 
		LuPixbuf* p, 
		long x, 
		long y)
{
   SOM_ResolveD(this,LuPixbuf,LuPixbuf,putAt)
	(this, ev,p,x,y);
}


/*
 * Reintroduce inherited methods
 */

/* initializer method: somDefaultInit */
void   somDefaultInit(som3InitCtrl* ctrl)
{
   SOM_ResolveD(this,LuPixbuf,SOMObject,somDefaultInit)
	(this,ctrl);
}


/* method: somDestruct */
void   somDestruct(octet doFree, 
		som3DestructCtrl* ctrl)
{
   SOM_ResolveD(this,LuPixbuf,SOMObject,somDestruct)
	(this,doFree,ctrl);
}


/* initializer method: somDefaultCopyInit */
void   somDefaultCopyInit(som3InitCtrl* ctrl, 
		SOMObject* fromObj)
{
   SOM_ResolveD(this,LuPixbuf,SOMObject,somDefaultCopyInit)
	(this,ctrl,fromObj);
}


/* method: somDefaultAssign */
LuPixbuf*  somDefaultAssign(som3AssignCtrl* ctrl, 
		SOMObject* fromObj)
{
   return SOM_ResolveD(this,LuPixbuf,SOMObject,somDefaultAssign)
	(this,ctrl,fromObj);
}


/* initializer method: somDefaultConstCopyInit */
void   somDefaultConstCopyInit(som3InitCtrl* ctrl, 
		SOMObject* fromObj)
{
   SOM_ResolveD(this,LuPixbuf,SOMObject,somDefaultConstCopyInit)
	(this,ctrl,fromObj);
}


/* initializer method: somDefaultVCopyInit */
void   somDefaultVCopyInit(som3InitCtrl* ctrl, 
		SOMObject* fromObj)
{
   SOM_ResolveD(this,LuPixbuf,SOMObject,somDefaultVCopyInit)
	(this,ctrl,fromObj);
}


/* initializer method: somDefaultConstVCopyInit */
void   somDefaultConstVCopyInit(som3InitCtrl* ctrl, 
		SOMObject* fromObj)
{
   SOM_ResolveD(this,LuPixbuf,SOMObject,somDefaultConstVCopyInit)
	(this,ctrl,fromObj);
}


/* method: somDefaultConstAssign */
LuPixbuf*  somDefaultConstAssign(som3AssignCtrl* ctrl, 
		SOMObject* fromObj)
{
   return SOM_ResolveD(this,LuPixbuf,SOMObject,somDefaultConstAssign)
	(this,ctrl,fromObj);
}


/* method: somDefaultVAssign */
LuPixbuf*  somDefaultVAssign(som3AssignCtrl* ctrl, 
		SOMObject* fromObj)
{
   return SOM_ResolveD(this,LuPixbuf,SOMObject,somDefaultVAssign)
	(this,ctrl,fromObj);
}


/* method: somDefaultConstVAssign */
LuPixbuf*  somDefaultConstVAssign(som3AssignCtrl* ctrl, 
		SOMObject* fromObj)
{
   return SOM_ResolveD(this,LuPixbuf,SOMObject,somDefaultConstVAssign)
	(this,ctrl,fromObj);
}


/* method: somInit */
void   somInit()
{
   SOM_ResolveD(this,LuPixbuf,SOMObject,somInit)
	(this);
}


/* method: somFree */
void   somFree()
{
   SOM_ResolveD(this,LuPixbuf,SOMObject,somFree)
	(this);
}


/* method: somUninit */
void   somUninit()
{
   SOM_ResolveD(this,LuPixbuf,SOMObject,somUninit)
	(this);
}


/* method: somGetClass */
SOMClass*   somGetClass()
{
   return SOM_ResolveD(this,LuPixbuf,SOMObject,somGetClass)
	(this);
}


/* method: somGetClassName */
string   somGetClassName()
{
   return SOM_ResolveD(this,LuPixbuf,SOMObject,somGetClassName)
	(this);
}


/* method: somGetSize */
long   somGetSize()
{
   return SOM_ResolveD(this,LuPixbuf,SOMObject,somGetSize)
	(this);
}


/* method: somIsA */
boolean   somIsA(SOMClass* aClassObj)
{
   return SOM_ResolveD(this,LuPixbuf,SOMObject,somIsA)
	(this,aClassObj);
}


/* method: somIsInstanceOf */
boolean   somIsInstanceOf(SOMClass* aClassObj)
{
   return SOM_ResolveD(this,LuPixbuf,SOMObject,somIsInstanceOf)
	(this,aClassObj);
}


/* method: somRespondsTo */
boolean   somRespondsTo(somId mId)
{
   return SOM_ResolveD(this,LuPixbuf,SOMObject,somRespondsTo)
	(this,mId);
}


/* va_list method: somDispatch */

/* the va_list invocation form */
boolean   LuPixbuf_somDispatch(somToken* retValue, 
		somId methodId, 
		va_list ap)
{return SOM_ResolveD(this,LuPixbuf,SOMObject,somDispatch)
	(this,retValue,methodId,ap);
}

/* the varargs invocation form */
boolean   somDispatch(somToken* retValue, 
		somId methodId, 
		...)
{
   va_list ap;
   va_start(ap, methodId);
   boolean __somResult = 
      SOM_ResolveD(this,LuPixbuf,SOMObject,somDispatch)
	(this,retValue,methodId,ap);
   va_end(ap);
   return __somResult;
}


/* va_list method: somClassDispatch */

/* the va_list invocation form */
boolean   LuPixbuf_somClassDispatch(SOMClass* clsObj, 
		somToken* retValue, 
		somId methodId, 
		va_list ap)
{return SOM_ResolveD(this,LuPixbuf,SOMObject,somClassDispatch)
	(this,clsObj,retValue,methodId,ap);
}

/* the varargs invocation form */
boolean   somClassDispatch(SOMClass* clsObj, 
		somToken* retValue, 
		somId methodId, 
		...)
{
   va_list ap;
   va_start(ap, methodId);
   boolean __somResult = 
      SOM_ResolveD(this,LuPixbuf,SOMObject,somClassDispatch)
	(this,clsObj,retValue,methodId,ap);
   va_end(ap);
   return __somResult;
}


/* method: somCastObj */
boolean   somCastObj(SOMClass* cls)
{
   return SOM_ResolveD(this,LuPixbuf,SOMObject,somCastObj)
	(this,cls);
}


/* method: somResetObj */
boolean   somResetObj()
{
   return SOM_ResolveD(this,LuPixbuf,SOMObject,somResetObj)
	(this);
}


/* va_list method: somDispatchV */

/* the va_list invocation form */
void   LuPixbuf_somDispatchV(somId methodId, 
		somId descriptor, 
		va_list ap)
{   SOM_ResolveD(this,LuPixbuf,SOMObject,somDispatchV)
	(this,methodId,descriptor,ap);
}

/* the varargs invocation form */
void   somDispatchV(somId methodId, 
		somId descriptor, 
		...)
{
   va_list ap;
   va_start(ap, descriptor);
   SOM_ResolveD(this,LuPixbuf,SOMObject,somDispatchV)
	(this,methodId,descriptor,ap);
   va_end(ap);
}


/* va_list method: somDispatchL */

/* the va_list invocation form */
long   LuPixbuf_somDispatchL(somId methodId, 
		somId descriptor, 
		va_list ap)
{return SOM_ResolveD(this,LuPixbuf,SOMObject,somDispatchL)
	(this,methodId,descriptor,ap);
}

/* the varargs invocation form */
long   somDispatchL(somId methodId, 
		somId descriptor, 
		...)
{
   va_list ap;
   va_start(ap, descriptor);
   long __somResult = 
      SOM_ResolveD(this,LuPixbuf,SOMObject,somDispatchL)
	(this,methodId,descriptor,ap);
   va_end(ap);
   return __somResult;
}


/* va_list method: somDispatchA */

/* the va_list invocation form */
void*   LuPixbuf_somDispatchA(somId methodId, 
		somId descriptor, 
		va_list ap)
{return SOM_ResolveD(this,LuPixbuf,SOMObject,somDispatchA)
	(this,methodId,descriptor,ap);
}

/* the varargs invocation form */
void*   somDispatchA(somId methodId, 
		somId descriptor, 
		...)
{
   va_list ap;
   va_start(ap, descriptor);
   void* __somResult = 
      SOM_ResolveD(this,LuPixbuf,SOMObject,somDispatchA)
	(this,methodId,descriptor,ap);
   va_end(ap);
   return __somResult;
}


/* va_list method: somDispatchD */

/* the va_list invocation form */
double   LuPixbuf_somDispatchD(somId methodId, 
		somId descriptor, 
		va_list ap)
{return SOM_ResolveD(this,LuPixbuf,SOMObject,somDispatchD)
	(this,methodId,descriptor,ap);
}

/* the varargs invocation form */
double   somDispatchD(somId methodId, 
		somId descriptor, 
		...)
{
   va_list ap;
   va_start(ap, descriptor);
   double __somResult = 
      SOM_ResolveD(this,LuPixbuf,SOMObject,somDispatchD)
	(this,methodId,descriptor,ap);
   va_end(ap);
   return __somResult;
}


/* method: somPrintSelf */
SOMObject*   somPrintSelf()
{
   return SOM_ResolveD(this,LuPixbuf,SOMObject,somPrintSelf)
	(this);
}


/* method: somDumpSelf */
void   somDumpSelf(long level)
{
   SOM_ResolveD(this,LuPixbuf,SOMObject,somDumpSelf)
	(this,level);
}


/* method: somDumpSelfInt */
void   somDumpSelfInt(long level)
{
   SOM_ResolveD(this,LuPixbuf,SOMObject,somDumpSelfInt)
	(this,level);
}



};   /* LuPixbuf */



#endif       /* SOM_LuPixbuf_xh */
